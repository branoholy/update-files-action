name: CI

on: [push, pull_request]

jobs:
  install:
    name: Install dependencies
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'push' ||
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.user.login == 'branoholy-bot'
      )
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 13.12.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v1.1.2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit == false
        run: npm ci

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 13.12.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v1.1.2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Build project
        run: npm run build
        env:
          CI: true

  type-check:
    name: Check types
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 13.12.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v1.1.2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Check types
        run: npm run type-check
        env:
          CI: true

  lint:
    name: Lint files
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 13.12.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v1.1.2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Lint files
        run: npm run lint:all
        env:
          CI: true

  check-node-versions:
    name: Check Node.js versions
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.0
      - name: Setup Node.js
        uses: actions/setup-node@v1.4.0
        with:
          node-version: 13.12.0
      - name: Cache or restore dependencies
        id: cache-dependencies
        uses: actions/cache@v1.1.2
        with:
          path: node_modules
          key: ${{ runner.OS }}-node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Check Node.js versions
        run: npm run node-versions-check

  send-ci-status-summary:
    name: Send CI status summary
    runs-on: ubuntu-latest
    needs:
      - build
      - type-check
      - lint
      - check-node-versions
    steps:
      - name: Send CI status summary
        run: >-
          curl -L -X POST
          -H 'Content-Type: application/json'
          -H 'Authorization: token ${{ secrets.BRANOHOLY_BOT_TOKEN }}'
          -d '{
            "state": "success",
            "context": "CI / Status summary",
            "description": "All checks passed"
          }'
          'https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}'
