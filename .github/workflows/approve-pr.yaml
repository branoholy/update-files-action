# Approve Dependabot dependencies
#
# Approved dependencies
# ---------------------
# actions-core-
#   @actions/core (e2e-tests)
#
# babel-
#   @babel/*, babel-loader (build)
#   babel-jest (e2e-tests, unit-tests)
#   @babel/node (check-node-versions)
#
# btoa-
#   btoa (e2e-tests)
#
# envalid-
#   envalid (e2e-tests)
#
# eslint-
#   eslint, eslint-config-*, eslint-plugin-* (lint)
#
# jest-
#   jest (e2e-tests, unit-tests)
#
# nock-
#   nock (e2e-tests)
#
# octokit-rest-
#   @octokit/rest (e2e-tests)
#
# prettier-
#   prettier (lint)
#
# types-
#   @types/* (type-check)
#
# typescript-
#   typescript (type-check)
#   @typescript-eslint/eslint-plugin (lint)
#   @typescript-eslint/parser (lint)
#
# webpack-
#   webpack, webpack-cli (build)
#
# Other dependencies
# ------------------
# @actions/core, @octokit/rest, btoa, envalid
# @stryker-mutator/core, @stryker-mutator/jest-runner
# diff, lint-staged, node-fetch
#
# Approved GitHub Actions
# -----------------------
# actions-checkout-
#   actions/checkout
#
# actions-setup-node-
#   actions/setup-node
#
# Other GitHub Actions
# --------------------
# actions/cache, branoholy/update-files-action, codecov/codecov-action,
# hmarr/auto-approve-action, pascalgn/automerge-action

name: Approve PR

on: pull_request

jobs:
  approve-dependabots-pr:
    name: "Approve Dependabot's PR"
    runs-on: ubuntu-latest
    if: >-
      github.event.pull_request.user.login == 'dependabot[bot]' &&
      (
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-actions-core-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-babel-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-btoa-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-envalid-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-eslint-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-jest-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-nock-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-octokit-rest-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-prettier-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-types-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-typescript-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-webpack-') ||
        startsWith(github.head_ref, 'dependabot-github_actions-actions-checkout-') ||
        startsWith(github.head_ref, 'dependabot-github_actions-actions-setup-node-')
      )
    steps:
      - name: Approve pull request
        uses: octokit/graphql-action@v2.2.20
        with:
          query: |
            mutation addPullRequestReview($id: ID!) {
              addPullRequestReview(input: {pullRequestId: $id, event: APPROVE}) {
                clientMutationId
              }
            }
          id: ${{ github.event.pull_request.node_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  approve-other-bots-pr:
    name: "Approve other bots' PR"
    runs-on: ubuntu-latest
    if: >-
      github.event.pull_request.user.login == 'branoholy-bot' &&
      (
        github.head_ref == 'deps-update-lock-file' ||
        github.head_ref == 'deps-update-node' ||
        github.head_ref == 'build-update-dist'
      )
    steps:
      - name: Approve pull request
        uses: octokit/graphql-action@v2.2.20
        with:
          query: |
            mutation addPullRequestReview($id: ID!) {
              addPullRequestReview(input: {pullRequestId: $id, event: APPROVE}) {
                clientMutationId
              }
            }
          id: ${{ github.event.pull_request.node_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  approve-owners-pr:
    name: "Approve owner's PR"
    runs-on: ubuntu-latest
    if: github.event.pull_request.user.login == 'branoholy'
    steps:
      - name: Approve pull request
        uses: octokit/graphql-action@v2.2.20
        with:
          query: |
            mutation addPullRequestReview($id: ID!) {
              addPullRequestReview(input: {pullRequestId: $id, event: APPROVE}) {
                clientMutationId
              }
            }
          id: ${{ github.event.pull_request.node_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
