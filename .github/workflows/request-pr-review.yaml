name: Request PR review

on: pull_request

jobs:
  request-dependabots-pr-review:
    name: "Request Dependabot's PR review"
    runs-on: ubuntu-latest
    if: >-
      github.event.pull_request.user.login == 'dependabot[bot]' &&
      !(
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-actions-core-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-babel-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-btoa-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-envalid-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-eslint-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-jest-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-nock-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-octokit-rest-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-prettier-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-types-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-typescript-') ||
        startsWith(github.head_ref, 'dependabot-npm_and_yarn-webpack-') ||
        startsWith(github.head_ref, 'dependabot-github_actions-actions-checkout-') ||
        startsWith(github.head_ref, 'dependabot-github_actions-actions-setup-node-')
      )
    steps:
      - name: Get user id
        id: get-user-id
        uses: octokit/graphql-action@v2.2.20
        with:
          query: |
            query getUserId($login: String!) {
              user(login: $login) {
                id
              }
            }
          login: branoholy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Request pull request review
        uses: octokit/graphql-action@v2.2.20
        with:
          query: |
            mutation requestReviews($id: ID!, $user: ID!) {
              requestReviews(input: {pullRequestId: $id, userIds: [$user]}) {
                clientMutationId
              }
            }
          id: ${{ github.event.pull_request.node_id }}
          user: ${{ fromJSON(steps.get-user-id.outputs.data).user.id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
